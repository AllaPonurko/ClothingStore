@{
    ViewData["Title"] = "Shoping Page";
}
<style>
    #filter{width:200px;background-color:aliceblue}
    #shopContent {
        margin-left: 200px;background-color:blanchedalmond;width:auto;margin-top:auto
    }
</style>
<h1>
    @ViewData["Title"]
</h1>
<nav id="filter">
    <form name="lstCategory">
        <div class="form-group col-md-5">
            @*<label for="name">List of categories:</label>*@
            <table class="table table-condensed table-striped  col-md-6">
                <thead><tr><th>    </th></tr></thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </form>
</nav>

<div id="shopContent">
    @*Loading...*@
    <form class="lstProducts">
        <div class="form-group col-md-7">
            @*<label for="name">List of products:</label>*@
            <table class="table table-condensed table-striped  col-md-8">
                <thead><tr><th>Name</th><th>Image</th></tr></thead>
                <tbody class="product">
                </tbody>
            </table>
        </div>
    </form>
</div>
<script>


    /**
     * Отображение ошибки для пользователя
     */
    function renderError(err) {
        console.log(err)
    }
    /*let lstCategory = document.getElementById("lstCategory")*/
    async function getCategories() {
        const response = await fetch("/api/categories", {
            method: "GET",
            headers: { "Accept": "application/json" }
        });
        // если запрос прошел нормально
        if (response.ok === true) {
            // получаем данные
            const categories = await response.json();
            /*console.log(categories)*/
            let rows = document.querySelector("tbody");
            categories.forEach(category => {
                // добавляем полученные элементы в таблицу
                rows.append(row(category));
            });
        }
    }
        // создание строки для таблицы
        function row(category) {

            const tr = document.createElement("tr");
            //tr.setAttribute("data-rowid", category.id);

            //const idTd = document.createElement("td");
            //idTd.append(category.id);
            //tr.append(idTd);

            const nameTd = document.createElement("td");
            nameTd.append(category.name);
            tr.append(nameTd);

            return tr;
        }
        
    /*let product = document.getElementById("product")*/
    // Получение данных о продуктах без фильтра
     
    async function getProducts() {
        
        const response = await fetch('/api/products', {
            method: "GET",
            headers: { "Accept": "application/json" }
        });
        // если запрос прошел нормально
        if (response.ok === true) {
            // получаем данные
            const products = await response.json();
            /*console.log(products)*/
            let rows = document.querySelector(".product");
            products.forEach(product => {
                // добавляем полученные элементы в таблицу
                rows.append(rowProduct(product));
            });
        }
    }
    let content = document.getElementById("shopContent")
    function rowProduct(product) {
        //content.innerHTML = ""
        //if (products.length === 0) {
        //    let msg = '<div class="alert alert-secondary" role = "alert" > По вашему запросу продуктов не найдено </div>'
        //    content.innerHTML = msg
        //    return
        //}
   
        const tr = document.createElement("tr");
        const nameTd = document.createElement("td");
        nameTd.append(product.name);
        tr.append(nameTd);

        const imgTd = document.createElement("td");
        imgTd.append(product.img);
        tr.append(imgTd);
        return tr;

    }
        getCategories()
        getProducts()
</script>


