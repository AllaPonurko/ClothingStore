@{
    ViewData["Title"] = "Shoping Page";
}
<style>
    #mainMenu {
        width: 200px;
        background-color: antiquewhite;
        overflow: auto;
        float: left;
        height: 100%;
    }
    #shopContent {
        
        margin-left: 200px;
        background-color: floralwhite;
        width: auto;
        overflow: auto;
        height: 100%;
    }
</style>
<h1>
    @ViewData["Title"]
</h1>
<nav id="mainMenu" >
    <form name="lstCategory">
        <div class="form-group col-md-5">
            @*<label for="name">List of categories:</label>*@
            <table class="table table-condensed table-striped  col-md-6">
                <thead><tr><th>    </th></tr></thead>
                <tbody class="category">
                </tbody>
            </table>
        </div>
    </form>
    <div id="filter" >
        <form method="get" action="~/Api/Seach">
            <h6>Seach by vendor</h6>
            <p>
                <select class="vendor" id="vendor" name="vendor">
                    <option value="">Choose vendor</option>
                </select>
                @*@Html.DropDownList ("Vendor",new SelectList(getVendors()),"Choose vendor",)*@
            </p>
            <h6>Seach by category</h6>
            <p>
                <select id="category" name="category">
                    <option value="getCategories()">Choose category</option>
                </select>
            </p>
            <h6>Seach by size</h6>
            <p>
                <select id="category" name="category">
                    <option value=" ">Choose size</option>
                </select>
            </p>
            <input type="submit" id="btnConfirm"  value="Confirm" />
        </form>
        
    </div>
</nav>
    


<div id="shopContent">
    <form class="lstProducts">
        <div class="form-group col-md-7">
            <table class="table table-condensed table-striped  col-md-8">
                <thead><tr><th>Name</th><th>Price</th><th>Image</th></tr></thead>
                <tbody class="product">
                </tbody>
            </table>
        </div>
    </form>
</div>
<script>

    /**
     * Отображение ошибки для пользователя
     */
    function renderError(err) {
        console.log(err)
    }
    /*let lstCategory = document.getElementById("lstCategory")*/
    async function getCategories() {
        const response =  await fetch("/api/categories", {
            method: "GET",
            headers: { "Accept": "application/json" }
        });//.then(response => { return response.json })
        //        .then(data => {
        //            renderCategories(data)
        //        }).catch(err => {
        //            console.log(err)
        //})

        // если запрос прошел нормально
        if (response.ok === true) {
            // получаем данные
            const categories = await response.json();
            let rows = document.querySelector(".category");
            categories.forEach(category => {
                // добавляем полученные элементы в таблицу
                rows.append(row(category));
            });
        }
    }
    
    //function renderCategories(categories) {
    //    lstCategory.innerHTML = ""
    //    categories.map(category => {
    //        let li = document.createElement('li')
    //        li.dataset.category_id = category.id
    //        li.innerText = category.name
    //        li.onclick = ()=> {
    //            category_id = event.target.dataset.category_id
    //            getSearchProduct()
    //        }

    //        lstCategory.appendChild(li)
    //    })

    //}
    
        // создание строки для таблицы
        function row(category) {

            const tr = document.createElement("tr");
            //tr.setAttribute("data-rowid", category.id);

            //const idTd = document.createElement("td");
            //idTd.append(category.id);
            //tr.append(idTd);

            const nameTd = document.createElement("td");
            nameTd.append(category.name);
            tr.append(nameTd);
            tr.onclick = () =>{
                category_id = event.target.dataset.category_id
                getSearchProduct();
            }
                
            return tr;
        }
    
    // Получение данных о продуктах без фильтра
     
    async function getProducts() { 
        const response = await fetch('/api/products', {
            method: "GET",
            headers: { "Accept": "application/json" }
        });
        // если запрос прошел нормально
        if (response.ok === true) {
            // получаем данные
            const products = await response.json();
            /*console.log(products)*/
            let rows = document.querySelector(".product");
            products.forEach(product => {
                // добавляем полученные элементы в таблицу
                rows.append(rowProduct(product));
            });
        }
    }
    
    function rowProduct(product) {
       
        const tr = document.createElement("tr");
        const nameTd = document.createElement("td");
        nameTd.append(product.name);
        tr.append(nameTd);
        const priceTd = document.createElement("td");
        priceTd.append(product.price);
        tr.append(priceTd);
        const imgTd = document.createElement("td");
        imgTd.append(product.img);
        tr.append(imgTd);
        return tr;

    }
    let category_id = null
    let size_id = null
    let vendor_id = null
    let vendors=[]
    /**
     * Получение данных о продуктах, в соответствии с фильтром
     */
    async function getSearchProduct() {
        console.log(event.target)
        console.log(event.target.dataset.category_id)

        const response = await fetch(
            '/api/seach/?'
            + 'CategoryId=' + category_id
            + 'SizeId=' + size_id
            + 'VendorId' + vendor_id.join('&'), {
            method: "GET",
                headers: {
                    "Accept": "application/json"
                }
                });
        if (response.ok === true) {
            const products = await response.json();
            let rows = document.querySelector(".product");
            products.forEach(product => {
                // добавляем полученные элементы в таблицу
                rows.append(rowProduct(product));
            });
        }
    }
    async function getVendors() {
        fetch('/api/vendors',{
            method: "GET",
            headers: { "Accept": "application/json" }
        });
        if (response.ok === true) {
            const _vendors = await response.json();
           
            _vendors.forEach(vendor => {
                vendors.map(vendor.name)
            });
        }
        return vendors
    }

        getCategories()
        getProducts()
</script>


